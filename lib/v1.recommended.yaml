# Copyright 2019 Workiva Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Every lint in this file is categorized as "recommended".
#
# For context on that decision or to discuss a change for any individual lint,
# visit this issue and search for the lint by its name:
# https://github.com/Workiva/dart_analysis_options/issues/2

# This file also includes all of the required rules.
include: package:workiva_analysis_options/v1.yaml

analyzer:
  errors:
    # Promote enabled lints to errors:
    always_require_non_null_named_parameters: error
    avoid_bool_literals_in_conditional_expressions: error
    avoid_function_literals_in_foreach_calls: error
    avoid_implementing_value_types: error
    avoid_null_checks_in_equality_operators: error
    avoid_positional_boolean_parameters: error
    avoid_relative_lib_imports: error
    avoid_renaming_method_parameters: error
    avoid_returning_this: error
    avoid_returning_null: error
    avoid_returning_null_for_future: error
    avoid_returning_null_for_void: error
    avoid_setters_without_getters: error
    avoid_types_on_closure_parameters: error
    avoid_unused_constructor_parameters: error
    cascade_invocations: error
    comment_references: error
    curly_braces_in_flow_control_structures: error
    join_return_with_assignment: error
    omit_local_variable_types: error
    overridden_fields: error
    package_api_docs: error
    package_prefixed_library_names: error
    package_names: error
    prefer_adjacent_string_concatenation: error
    prefer_asserts_in_initializer_lists: error
    prefer_collection_literals: error
    prefer_conditional_assignment: error
    prefer_const_declarations: error
    provide_deprecation_message: error
    prefer_final_fields: error
    prefer_final_in_for_each: error
    prefer_final_locals: error
    prefer_function_declarations_over_variables: error
    prefer_if_elements_to_conditional_expressions: error
    prefer_initializing_formals: error
    prefer_inlined_adds: error
    prefer_interpolation_to_compose_strings: error
    prefer_iterable_whereType: error
    prefer_mixin: error
    prefer_null_aware_operators: error
    prefer_single_quotes: error
    prefer_spread_collections: error
    prefer_void_to_null: error
    sort_pub_dependencies: error
    test_types_in_equals: error
    type_annotate_public_apis: error
    unawaited_futures: error
    unnecessary_await_in_return: error
    unnecessary_brace_in_string_interps: error
    unnecessary_getters_setters: error
    unnecessary_lambdas: error
    unnecessary_parenthesis: error
    unnecessary_overrides: error
    unnecessary_this: error
    use_function_type_syntax_for_parameters: error
    use_rethrow_when_possible: error

linter:
  rules:
    - always_require_non_null_named_parameters
    - avoid_bool_literals_in_conditional_expressions
    - avoid_function_literals_in_foreach_calls
    - avoid_implementing_value_types
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_relative_lib_imports
    - avoid_renaming_method_parameters
    - avoid_returning_this
    - avoid_returning_null
    - avoid_returning_null_for_future
    - avoid_returning_null_for_void
    - avoid_setters_without_getters
    - avoid_types_on_closure_parameters
    - avoid_unused_constructor_parameters
    - cascade_invocations
    - comment_references
    - curly_braces_in_flow_control_structures
    - join_return_with_assignment
    - omit_local_variable_types
    - overridden_fields
    - package_api_docs
    - package_prefixed_library_names
    - package_names
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_declarations
    - provide_deprecation_message
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_function_declarations_over_variables
    - prefer_if_elements_to_conditional_expressions
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_interpolation_to_compose_strings
    - prefer_iterable_whereType
    - prefer_mixin
    - prefer_null_aware_operators
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_void_to_null
    - sort_pub_dependencies
    - test_types_in_equals
    - type_annotate_public_apis
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_parenthesis
    - unnecessary_overrides
    - unnecessary_this
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
